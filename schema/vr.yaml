# VR uses yaml as the source document for json schema
#
# To convert vr.yaml to vr.json:
#   make vr.json
# You'll probably have to `pip install pyyaml` first.
#
# To watch for changes and update automatically:
#   make watch &


$schema: "http://json-schema.org/schema#"
title: "GA4GH-VR-Definitions"
type: "object"


definitions:
  # VR definitions are presented top-down.  Everything rolls up to
  # Variation, which is a polymorphic abstraction of many kinds of
  # variation.

  ############################################################################
  # Variation
  Variation:
    description: >-
      A polymorphic representation of variation
    oneOf:
      - $ref: "#/definitions/Text"
      - $ref: "#/definitions/Allele"
    discriminator:
      propertyName: type

  Text:
    type: object
    properties:
      type:
        type: string
        enum: ["Text"]
        default: "Text"
      id:
        $ref: "#/definitions/Id"
      definition:
        type: string
        description: >-
          An textual representation of variation intended to capture
          variation descriptions that cannot be parsed, but still
          treated as variation.
    example:
      type: Text
      id: "text/012abc"
      definition: "CTLA4, disruption of transmembrane domain"

  Allele:
    description: An assertion of a sequence state at a Location.
    type: "object"
    properties:
      type:
        type: string
        enum: ["Allele"]
        default: "Allele"
      id:
        $ref: "#/definitions/Id"
      location:
        $ref: "#/definitions/Location"
      location_id:
        $ref: "#/definitions/Id"
      state:
        $ref: "#/definitions/State"
    additionalProperties: false
    example:
      type: "Allele"
      id: "allele/23cd"
      location_id: "location/01ab"
      state:
        type: SequenceState
        sequence: "A"

  ############################################################################
  # Locations

  Location:
    description: >-
      A Location represents a span on a specific sequence.
    oneOf:
      - $ref: "#/definitions/SequenceLocation"
      - $ref: "#/definitions/GeneLocation"
      - $ref: "#/definitions/CytobandLocation"
    discriminator:
      propertyName: type
  
  SequenceLocation:
    type: object
    properties:
      type:
        type: string
        enum: ["SequenceLocation"]
        default: "SequenceLocation"
      id:
        $ref: "#/definitions/Id"
      sequence_id:
        type: string
        example: "GS_ss8r_wB0-b9r44TQTMmVTI92884QvBiB"
      interval:
        $ref: "#/definitions/Interval"

  GeneLocation:
    type: object
    properties:
      type:
        type: "string"
        enum: ["GeneLocation"]
        default: "GeneLocation"
      id:
        $ref: "#/definitions/Id"
      gene:
        $ref: "#/definitions/CURIE"
        description: See https://www.ebi.ac.uk/miriam/main/datatypes/MIR:00000069
    example:
      type: "GeneLocation"
      id: "location/47"
      gene: "ncbigene:1493"

  CytobandLocation:
    type: "object"
    properties:
      type:
        type: "string"
        enum: ["CytobandLocation"]
        default: "CytobandLocation"
      id:
        $ref: "#/definitions/Id"
      chr:
        type: "string"
      start:
        $ref: "#/definitions/Cytoband"
      end:
        $ref: "#/definitions/Cytoband"
        nullable: true
        default: null
    additionalProperties: false
    required:
      - "type"
      - "chr"
      - "start"
    example:
      type: "CytobandLocation"
      chr: "11"
      start: "q22.3"
      end: "q23.1"
    

  ############################################################################
  # Interval
  # * SimpleInterval
  # * NestedInterval
  # * TODO: ConfidenceIntervalInterval (a la VCF)
  # * TODO: ComplexInterval (a la FALDO)

  Interval:
    description: >-
      A Interval represents a span of sequence.  Positions are
      always represented by contiguous spans using interbase
      coordinates.

      This definition of Interval is intended to be compatible with that
      in Sequence Ontolgy
      ([SO:0000001](http://www.sequenceontology.org/browser/current_svn/term/SO:0000001)),
      with the exception that the GA4GH VR Interval may be
      zero-width. The SO definition is for an "extent greater than
      zero".
    oneOf:
      - $ref: '#/definitions/SimpleInterval'
      - $ref: '#/definitions/NestedInterval'
      # - $ref: '#/definitions/ComplexInterval'
    discriminator:
      propertyName: type

  SimpleInterval:
    type: object
    properties:
      type:
        type: string
        enum: ["SimpleInterval"]
        default: SimpleInterval
      start:
        type: integer
        nullable: true
      end:
        type: integer
        nullable: true
    additionalProperties: false
    required:
      - start
      - end
    example:
      type: "SimpleInterval"
      start: 11
      end: 22

  NestedInterval:
    type: object
    properties:
      type:
        type: string
        enum: ["NestedInterval"]
        default: NestedInterval
      inner:
        $ref: '#/definitions/SimpleInterval'
      outer:
        $ref: '#/definitions/SimpleInterval'
    example:
      type: NestedInterval
      inner:
        type: SimpleInterval
        start: 20
        end: 30
      outer:
        type: SimpleInterval
        start: 10
        end: 40

  ############################################################################
  # States

  State:
    oneOf:
      - $ref: "#/definitions/SequenceState"
  
  SequenceState:
    type: object
    properties:
      type:
        type: string
        enum: ["SequenceState"]
        default: SequenceState
      sequence:
        type: string
        nullable: false
    required:
      - type
      - sequence
    example:
      type: SequenceState
      sequence: C      

  ############################################################################
  # "Basic" types
  # These types are used solely within other definitions.

  DateTime:
    type: "string"
    format: "date-time"
  
  Id:
    description: >-
      Uniquely identifies a specific instance of an object within a
      document.
    type: "string"
    example: "01340adf981as0"
  
  Identifier:
    description: >-
      A <namespace,accession> pair that refers to an object.
    type: "object"
    properties:
      namespace:
        type: "string"
        example: "refseq"
        description: "authority"
      accession:
        type: "string"
        example: "NM_000551.3"
        description: "unique key within namespace"
    additionalProperties: false
    required:
    - "namespace"
    - "accession"
  
  CURIE:
    description: >-
      A string that references an object using [W3C Compact URI
      (CURIE)](https://www.w3.org/TR/curie/) syntax.

      A CURIE is a URI. As a URI, it MAY locate objects (as with http
      references), but it may also merely name objects uniquely.  VR
      uses CURIEs primarily as a naming mechanism.  Implementations
      are expected to provide CURIE resolution mechanisms.

      String CURIEs are represented as `namespace`:`reference`. VR
      uses W3C CURIE nomenclature; some specifications use home-grown
      names for the same concepts.

      `namespace` SHOULD be defined in identifiers.org, or,
      alteratively, provided by a map of CURIE URLs.
    type: "string"
    pattern: '^\w+:\w+$'
    example: "ga4gh:allele/01234abcde"      

  Cytoband:
    type: string
    pattern: '^[pq][1-9][0-9]*(\.[1-9][0-9]*)?$'
    example: "q22.3"
      
  GeneSymbol:
    type: string
    pattern: '^[A-Z][A-Za-z0-9]+$'
    example: "BRCA1"
